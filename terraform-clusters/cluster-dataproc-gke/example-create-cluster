resource "google_container_cluster" "gke-default-utils-cluster" {
  provider = "google"
  name     = "${var.gcp_gke_cluster_name}"
  location = "${var.region}"

  remove_default_node_pool = true
  initial_node_count       = 1

  master_auth {
    username = ""
    password = ""

    client_certificate_config {
      issue_client_certificate = false
    }
  }

  project    = "${var.common_utils_project_id}"
  network    = "${data.google_compute_network.mdona-cloud-netops-vpc.self_link}"
  subnetwork = "${data.google_compute_subnetwork.mdona-cloud-common-subnet.self_link}"

  logging_service    = "logging.googleapis.com/kubernetes"
  monitoring_service = "monitoring.googleapis.com/kubernetes"

  # Aquí configuramos desde que red se puede acceder al cluster y el nombre que le pone
  master_authorized_networks_config {
    cidr_blocks {
      cidr_block   = "${var.vpc_subnet_gce_range}"
      display_name = "${var.vpc_subnet_gce_range_name}"
    }
  }

  # Aqui configuramos el nivel de privacidad del cluster:
  # si el endpoint de los master es privado
  # si los workers tienen IPs públicas o no y que rango van a tener los masters
  private_cluster_config {
    enable_private_endpoint = true
    enable_private_nodes    = true

    master_ipv4_cidr_block = "${var.vpc_master_gke_range}"
  }

  ip_allocation_policy {

    services_secondary_range_name = "${var.network_name_prefix}-${var.environment_acronym}-${var.vpc_subnet_gke_services_range_name}"
    cluster_secondary_range_name  = "${var.network_name_prefix}-${var.environment_acronym}-${var.vpc_subnet_gke_pod_range_name}"
  }
}




resource "google_container_node_pool" "gke-standard8-node-pool-pree" {


  name       = "${var.gcp_gke_cluster_name}-scale-pree"
  location   = "${var.region}"
  cluster    = "${google_container_cluster.gke-default-utils-cluster.name}"
  node_count = 0

  node_config {
    preemptible  = true
    machine_type = "${var.gcp_gke_np_standard8_machine_type}"

  service_account   ="${google_service_account.mdona_cloud_k8s_service_account.email}"
    metadata = {
      disable-legacy-endpoints = "true"
    }

    labels = {
                environment  = "${var.environment_acronym}"
                management   = "terraform"
                app          = "fwkcna"
                owner        = "analmans"
                securityzone = "standard"
                team         = "infra"
                product      = "fwkcna"
                status       = "active"
        }
   oauth_scopes = [
      "https://www.googleapis.com/auth/cloud-platform"
      ]

  }
 autoscaling {
        min_node_count = 0
        max_node_count = 4
    }

  project    = "${var.common_utils_project_id}"
}



resource "google_container_node_pool" "gke-standard-node-pool-cloudbees-pree" {


  name       = "${var.gcp_gke_cluster_name}-cicd-pree"
  location   = "${var.region}"
  cluster    = "${google_container_cluster.gke-default-utils-cluster.name}"
  node_count = 1

  node_config {
    preemptible  = true
    machine_type = "${var.gcp_gke_np_default_machine_type}"

  service_account   ="${google_service_account.mdona_cloud_k8s_service_account.email}"
    metadata = {
      disable-legacy-endpoints = "true"
    }

    labels = {
                environment  = "${var.environment_acronym}"
                management   = "terraform"
                app          = "fwkcna"
                owner        = "analmans"
                securityzone = "agent-cjoc"
                team         = "infra"
                product      = "fwkcna"
                status       = "active"
        }
   oauth_scopes = [
      "https://www.googleapis.com/auth/cloud-platform"
      ]

  }

   autoscaling {
        min_node_count = 0
        max_node_count = 4
    }

  project    = "${var.common_utils_project_id}"
}


resource "google_container_node_pool" "gke-standard8-node-pool" {


  name       = "${var.gcp_gke_cluster_name}-standard"
  location   = "${var.region}"
  cluster    = "${google_container_cluster.gke-default-utils-cluster.name}"
  node_count = 1

  node_config {
       machine_type = "${var.gcp_gke_np_standard8_machine_type}"

  service_account   ="${google_service_account.mdona_cloud_k8s_service_account.email}"
    metadata = {
      disable-legacy-endpoints = "true"
    }

    labels = {
                environment  = "${var.environment_acronym}"
                management   = "terraform"
                app          = "fwkcna"
                owner        = "analmans"
                securityzone = "standard"
                team         = "infra"
                product      = "fwkcna"
                status       = "active"
        }
   oauth_scopes = [
      "https://www.googleapis.com/auth/cloud-platform"
      ]
 }

  project    = "${var.common_utils_project_id}"
}



resource "google_container_node_pool" "gke-elastic-node-pool" {
  name       = "${var.gcp_gke_cluster_name}-elastic"
  location   = "${var.region}"
  cluster    = "${google_container_cluster.gke-default-utils-cluster.name}"
  node_count = 1

  node_config {
    machine_type = "${var.gcp_gke_np_highmem2_machine_type}"

  service_account   ="${google_service_account.mdona_cloud_k8s_service_account.email}"
    metadata = {
      disable-legacy-endpoints = "true"
    }

    labels = {
                environment  = "${var.environment_acronym}"
                management   = "terraform"
                app          = "fwkcna"
                owner        = "analmans"
                securityzone = "elastic"
                team         = "infra"
                product      = "fwkcna"
                status       = "active"
        }
   oauth_scopes = [
      "https://www.googleapis.com/auth/cloud-platform"
      ]

}
  project    = "${var.common_utils_project_id}"
}
